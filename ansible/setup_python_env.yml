---
- name: Setup Python Development Environment
  hosts: all
  vars:
    user_home: "{{ ansible_env.HOME }}"
    bash_config_file: "{{ user_home }}/.bashrc"
    pyenv_root: "{{ user_home }}/.pyenv"

  tasks:
    - name: Install pyenv dependencies
      become: yes
      apt:
        name:
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - curl
          - git
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libxml2-dev
          - libxmlsec1-dev
          - libffi-dev
          - liblzma-dev
        state: present
        update_cache: yes

    - name: Clone pyenv repository
      become: no
      git:
        repo: "https://github.com/pyenv/pyenv.git"
        dest: "{{ pyenv_root }}"
        version: master
      args:
        creates: "{{ pyenv_root }}"

    - name: Add pyenv configuration to shell config
      become: no
      blockinfile:
        path: "{{ bash_config_file }}"
        block: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          if command -v pyenv 1>/dev/null 2>&1; then
            eval "$(pyenv init --path)"
          fi
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR PYENV"
        create: yes

    - name: Install poetry
      become: no
      shell: "curl -sSL https://install.python-poetry.org | python3 -"
      args:
        creates: "{{ user_home }}/.local/bin/poetry"

    - name: Install uv
      become: no
      shell: "curl -LsSf https://astral.sh/uv/install.sh | sh"
      args:
        creates: "{{ user_home }}/.cargo/bin/uv"

    - name: Check if poetry-plugin-uv is already installed
      become: no
      shell: "{{ user_home }}/.local/bin/poetry plugin list | grep -q 'poetry-plugin-uv'"
      register: poetry_plugin_check
      changed_when: false
      failed_when: false

    - name: Install poetry-plugin-uv
      become: no
      shell: "{{ user_home }}/.local/bin/poetry self add poetry-plugin-uv"
      when: poetry_plugin_check.rc != 0

    - name: Add poetry and uv to PATH
      become: no
      blockinfile:
        path: "{{ bash_config_file }}"
        block: |
          export PATH="$HOME/.local/bin:$PATH"
          export PATH="$HOME/.cargo/bin:$PATH"
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR PYTHON TOOLS"
        create: yes
